{"version":3,"sources":["brainwallet.js","App.js","index.js","coin-logo.svg"],"names":["email","pass","secret","generateSecret","getMnemonicFromSecret","length","passChars","match","passUpperChars","index","crypto","sha256","toString","entropyToMnemonic","substring","App","useState","setEmail","password","setPassword","mnemonic","setMnemonic","connectWallet","a","generateWallet","className","src","JellyLogo","alt","InputGroup","FormControl","onChange","e","target","value","placeholder","aria-label","aria-describedby","p","type","Button","variant","onClick","ReactDOM","render","document","getElementById","module","exports"],"mappings":"8ZAIe,WAACA,EAAOC,GACrB,IAAMC,EAASC,EAAeH,EAAOC,GACrC,OAAOG,EAAsBF,IAGzBC,EAAiB,SAACH,EAAOC,GAC7B,IAAIC,EAASF,EAEbE,GAAU,IAAMD,EAAO,IACvBC,GAAUA,EAAOG,OAAS,MAA2C,GAApB,EAAdJ,EAAKI,OAAaL,EAAMK,QAE3D,IAAMC,EAAYL,EAAKM,MAAM,WAAaN,EAAKM,MAAM,WAAWF,OAAS,EAEnEG,EAAiBP,EAAKM,MAAM,WAC9BN,EAAKM,MAAM,WAAWF,OACtB,EAIJH,KAFoBD,EAAKM,MAAM,WAAaN,EAAKM,MAAM,WAAWF,OAAS,GAElDC,EAAYE,GAAkBP,EAAKI,OAAS,OAErEH,GAAUA,EAAS,GAAKA,EAExB,IAAK,IAAIO,EAAQ,EAAGA,GAAS,GAAIA,IAC/BP,EAASQ,SAAOC,OAAOT,GAAQU,SAAS,OAG1C,OAAOV,GAGHE,EAAwB,SAACF,GAE7B,OADiBW,4BAAkBX,EAAOY,UAAU,EAAG,M,iBCsB1CC,MAlDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNhB,EADM,KACCiB,EADD,OAEmBD,mBAAS,IAF5B,mBAENE,EAFM,KAEIC,EAFJ,OAGmBH,mBAAS,IAH5B,mBAGNI,EAHM,KAGIC,EAHJ,KAKPC,EAAa,uCAAG,4BAAAC,EAAA,sDACdH,EAAWI,EAAexB,EAAOkB,GACvCG,EAAYD,GAFQ,2CAAH,qDAKnB,OACE,yBAAKK,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YAAYC,IAAKC,IAAWC,IAAI,aAC/C,kBAACC,EAAA,EAAD,CAAYJ,UAAU,QACpB,kBAACK,EAAA,EAAD,CACEC,SAAU,SAACC,GACTf,EAASe,EAAEC,OAAOC,QAEpBC,YAAY,QACZC,aAAW,WACXC,mBAAiB,kBAIrB,kBAACR,EAAA,EAAD,CAAYJ,UAAU,QACpB,kBAACK,EAAA,EAAD,CACEC,SAAU,SAACO,GACTnB,EAAYmB,EAAEL,OAAOC,QAEvBK,KAAK,WACLJ,YAAY,WACZC,aAAW,WACXC,mBAAiB,kBAIrB,yBAAKZ,UAAU,kBACb,kBAACe,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMpB,MAAzC,YAGA,0BAAMG,WAAYL,GAAY,UAC3B,aAAeA,OC7C5BuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDC,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.930df4fb.chunk.js","sourcesContent":["import { crypto } from \"bitcoinjs-lib\";\r\n\r\nimport { entropyToMnemonic } from \"bip39\";\r\n\r\nexport default (email, pass) => {\r\n  const secret = generateSecret(email, pass);\r\n  return getMnemonicFromSecret(secret);\r\n};\r\n\r\nconst generateSecret = (email, pass) => {\r\n  let secret = email;\r\n\r\n  secret += \"|\" + pass + \"|\";\r\n  secret += secret.length + \"|!@\" + (pass.length * 7 + email.length) * 7;\r\n\r\n  const passChars = pass.match(/[a-z]+/g) ? pass.match(/[a-z]+/g).length : 1;\r\n\r\n  const passUpperChars = pass.match(/[A-Z]+/g)\r\n    ? pass.match(/[A-Z]+/g).length\r\n    : 1;\r\n\r\n  const passNumbers = pass.match(/[0-9]+/g) ? pass.match(/[0-9]+/g).length : 1;\r\n\r\n  secret += (passNumbers + passChars + passUpperChars) * pass.length + \"3571\";\r\n\r\n  secret += secret + \"\" + secret;\r\n\r\n  for (let index = 0; index <= 50; index++) {\r\n    secret = crypto.sha256(secret).toString(\"hex\");\r\n  }\r\n\r\n  return secret;\r\n};\r\n\r\nconst getMnemonicFromSecret = (secret) => {\r\n  const mnemonic = entropyToMnemonic(secret.substring(0, 32));\r\n  return mnemonic;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./main.scss\";\r\nimport generateWallet from \"./brainwallet\";\r\nimport JellyLogo from \"./coin-logo.svg\";\r\n\r\nfunction App() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mnemonic, setMnemonic] = useState(\"\");\r\n\r\n  const connectWallet = async () => {\r\n    const mnemonic = generateWallet(email, password);\r\n    setMnemonic(mnemonic);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"options\">\r\n        <img className=\"coin-logo\" src={JellyLogo} alt=\"CoinLogo\" />\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            placeholder=\"Email\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </InputGroup>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            onChange={(p) => {\r\n              setPassword(p.target.value);\r\n            }}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </InputGroup>\r\n\r\n        <div className=\"connect-wallet\">\r\n          <Button variant=\"primary\" onClick={() => connectWallet()}>\r\n            Generate\r\n          </Button>\r\n          <span className={!mnemonic && \"hidden\"}>\r\n            {\"Mnemonic: \" + mnemonic}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/coin-logo.aeddd528.svg\";"],"sourceRoot":""}